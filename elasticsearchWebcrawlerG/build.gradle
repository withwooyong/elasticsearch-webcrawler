buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'

jar {
	baseName = 'elasticsearchWebcrawlerG'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	compile('org.projectlombok:lombok')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'edu.uci.ics', name: 'crawler4j', version: '4.2'	
	compile group: 'com.sun.jna', name: 'jna', version: '3.0.9'
	compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'  
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    compile group: 'org.lazyluke', name: 'log4jdbc-remix', version: '0.2.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'  
    compile group: 'com.google.guava', name: 'guava', version: '20.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.0'    
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.1'
    compile group: 'net.sourceforge.cobertura', name: 'cobertura', version: '2.1.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

project.checkstyle.toolVersion = '7.2'

checkstyle {
  ignoreFailures = true // 분석결과 예외가 발생하면 빌드실패 발생시키는 것을 제외
    configFile = file("checkstyle.xml") // 1.1.2 에서 작성한 checkstyle 파일 지정
    reportsDir = file("${buildDir}/checkstyle-output") // 리포트 파일이 위치할 디렉토리 지정
}
 
checkstyleMain {
    reports {
        xml.destination = file("${checkstyle.reportsDir}/checkstyle-report.xml") // 리포트 파일의 위치 및 파일명 지정
    }
}

pmd {
    ignoreFailures = true // 분석결과 예외가 발생하면 빌드실패 발생시키는 것을 제외
    reportsDir = file("${buildDir}/pmd-output")
}
 
pmdMain {
    reports {
        xml.destination = file("${pmd.reportsDir}/pmd-report.xml")
        xml.enabled = true
    }
}

cobertura {
    coverageFormats = ['html', 'xml']               
    coverageIgnoreTrivial = true                    
    coverageIgnores = ['org.slf4j.Logger.*']            
    coverageReportDir = new File("$buildDir/reports/cobertura") 
}

test.finalizedBy(project.tasks.cobertura)   

